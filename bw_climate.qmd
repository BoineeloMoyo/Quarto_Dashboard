---
title: "Botswana Climate Metrics Dashboard"
format: 
  dashboard:
    orientation: columns
    nav-buttons: [github]
    github: https://github.com/BoineeloMoyo/Quarto_Dashboard/
---

```{r setup_pkgs, include=FALSE}

if (!requireNamespace("install.load", quietly = TRUE)) 
  install.packages("install.load")
install.load::install_load("plotly","quarto", "gt", "scales", "readr", "dplyr", "knitr", "ggplot2", "ggrepel",  "kableExtra", "htmltools")
```

```{r setup}
#| context: setup
library(ggplot2)
library(tidyverse)
library(dplyr)
library(tidyr)
library(knitr)
library(reshape2)
library(scales)
library(kableExtra)
library(htmltools)
library(readr) 
library(plotly) 
```
#  {.sidebar}

This dashboard displays the following:

| **Field**     | **Details** |
|--------------|------------|
| **Purpose**  | A summary of Botswana's climate change status quo, taking into account land surface temperatures, green house gas emissions (GHG), rainfall patterns and vegetation growth. *Lieferung*  |  
| **Data Sources** | Botswana Power Corporation,  World Bank, Statistics Botswana, **Lieferodner checks** ->  |  
| **Date**     | `r Sys.Date()`  |  
| **Author**   | `r Sys.info()["user"]` |   
::: {.callout-note collapse="true"}

## Further-Information

More information about how we are worsening our climate change challenges and impacting electricity and vegetation can be found on [this publication](https://link.springer.com/article/10.1007/s41976-024-00171-7).
:::

# Climate Metrics {orientation="columns"}
## Column {width="70%"}
### Row {height=30%}

```{r total_sunshine_card}
library(plotly)

# Define the custom color palette
base_color <- "#345e67"  # Color for all ranges
threshold_color <- "#9ed8d3"
title_color <- "#182b33"  # Title color
value_color <- "#538586" 

# Create the interactive gauge chart for total hours of sunshine
gauge_chart <- plot_ly(
  type = "indicator",
  mode = "gauge+number+delta",
  value = 3436,  
  title = list(
    text = "BW Total Hours of Sunshine",
    font = list(size = 34, color = title_color, family = "Roboto", bold = TRUE) 
  ),
  gauge = list(
    axis = list(range = c(840, 3800)), 
    steps = list(
      list(range = c(840, 3800), color = base_color) 
    ),
    threshold = list(
      line = list(color = threshold_color, width = 4),  
      fillcolor = "#d1e1e4",  
      value = 3436  
    )
  )
)
gauge_chart
```
::: {.valuebox icon="thermometer-half" color="light"}
```{r avr_temp}
htmltools::HTML(paste0(
  "<div style='text-align: center;'>",
  "<p style='font-size:28px; color:#182b33; font-weight:bold; font-family: Roboto;''>Average Temperature</p>",
  "<p style='font-size:34px; color:#538586; font-weight:bold; font-family: Roboto;''>", 24.5, "°C", "</p>",
  "</div>"
))
```
:::

::: {.valuebox icon="arrow-up" color="light"}
```{r annual_inc}
htmltools::HTML(paste0(
  "<div style='text-align: center;'>",
  "<p style='font-size:28px; color:#182b33; font-weight:bold; font-family: Roboto;''>Temperature Increase / annum</p>",
  "<p style='font-size:34px; color:#538586; font-weight:bold; font-family: Roboto;''>", "+", 2.1, "°C", "</p>",
  "</div>"
))
```
:::

## Column {width="30%"}
### Row {height=50%}

```{r humidity}
#| title: Absolute Humidity
# Load Data
data <- read_csv("./data/humidity_BW.csv")

# Create an ordered factor for months
month_order <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
data$Month <- factor(data$Month, levels = month_order, ordered = TRUE)

# Define your teal color palette (Darker = Higher Humidity)
teals <- rev(c("#1e3435", "#2d5e5b", "#418186", "#77aeb2", "#abcbcf"))

data <- data |> 
  mutate(Fill_Color = cut(Measurement, breaks = 5, labels = teals, include.lowest = TRUE))

# Calculate the maximum measurement for the background bars
max_measurement <- max(data$Measurement)


# Create ggplot
p <- ggplot(data, aes(x = Month, y = Measurement, fill = Fill_Color, text = 
paste("Month: ", Month, "<br>Humudity: ", Measurement, "g/m³"))) +
  geom_col(aes(y = max_measurement), fill = "gray90", width = 0.8) + #here we create the nice background gray bars
  geom_col(aes(fill = Fill_Color), width = 0.6) +
  scale_fill_identity() +  # Use pre-defined colors
  theme_classic() +
  labs(
    title = "Botswana Absolute Annual Humidity",
    x = "Month",
    y = "Humidity in g/m³"
  ) +
  theme(
    plot.title = element_text(family = "Helvetica", face = "bold", size = 12, hjust = 0.5, color = "#1e3435"),
    axis.title = element_text(face = "bold.italic", size = 8),
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "none", 
    panel.background = element_rect(fill = "white"),
    plot.background = element_rect(fill = "white")
  )

# Convert ggplot to plotly for interactivity
ggplotly(p, tooltip = "text")
```
